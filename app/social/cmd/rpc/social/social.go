// Code generated by goctl. DO NOT EDIT.
// Source: social.proto

package social

import (
	"context"

	"travel/app/social/cmd/rpc/pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MessageCreateReq  = pb.MessageCreateReq
	MessageCreateResp = pb.MessageCreateResp

	Social interface {
		MessageCreate(ctx context.Context, in *MessageCreateReq, opts ...grpc.CallOption) (*MessageCreateResp, error)
	}

	defaultSocial struct {
		cli zrpc.Client
	}
)

func NewSocial(cli zrpc.Client) Social {
	return &defaultSocial{
		cli: cli,
	}
}

func (m *defaultSocial) MessageCreate(ctx context.Context, in *MessageCreateReq, opts ...grpc.CallOption) (*MessageCreateResp, error) {
	client := pb.NewSocialClient(m.cli.Conn())
	return client.MessageCreate(ctx, in, opts...)
}
