// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	"travel/app/intelligence/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/conversation/create",
				Handler: ConversationCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/conversation/delete",
				Handler: ConversationDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/conversation/list",
				Handler: ConversationListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/strategy/create",
				Handler: StrategyCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/strategy/delete",
				Handler: StrategyDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/strategy/detail",
				Handler: StrategyDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/strategy/list",
				Handler: StrategyListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/conversation/generate",
				Handler: ConversationGenerateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/intelligence/strategy/generate",
				Handler: StrategyGenerateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithTimeout(300000*time.Millisecond),
	)
}
