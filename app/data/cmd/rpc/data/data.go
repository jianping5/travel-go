// Code generated by goctl. DO NOT EDIT.
// Source: data.proto

package data

import (
	"context"

	"travel/app/data/cmd/rpc/pb/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ContentSimilarReq   = pb.ContentSimilarReq
	ContentSimilarResp  = pb.ContentSimilarResp
	UserLikeContentReq  = pb.UserLikeContentReq
	UserLikeContentResp = pb.UserLikeContentResp

	Data interface {
		ContentSimilar(ctx context.Context, in *ContentSimilarReq, opts ...grpc.CallOption) (*ContentSimilarResp, error)
		UserLikeContent(ctx context.Context, in *UserLikeContentReq, opts ...grpc.CallOption) (*UserLikeContentResp, error)
	}

	defaultData struct {
		cli zrpc.Client
	}
)

func NewData(cli zrpc.Client) Data {
	return &defaultData{
		cli: cli,
	}
}

func (m *defaultData) ContentSimilar(ctx context.Context, in *ContentSimilarReq, opts ...grpc.CallOption) (*ContentSimilarResp, error) {
	client := pb.NewDataClient(m.cli.Conn())
	return client.ContentSimilar(ctx, in, opts...)
}

func (m *defaultData) UserLikeContent(ctx context.Context, in *UserLikeContentReq, opts ...grpc.CallOption) (*UserLikeContentResp, error) {
	client := pb.NewDataClient(m.cli.Conn())
	return client.UserLikeContent(ctx, in, opts...)
}
