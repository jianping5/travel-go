syntax = "v1"

info (
	title:  "用户API"
	desc:   "用户API文档"
	author: "jianping5"
)

type (
	// 用户登录
	LoginReq {
		Account  string `json:"account"`
		Password string `json:"password"`
	}
	LoginResp {
		AccessToken  string `json:"accessToken"`
		AccessExpire int64  `json:"accessExpire"`
	}
	// 用户注册
	RegisterReq {
		Account  string `json:"account"`
		Password string `json:"password"`
		Email    string `json:"email"`
	}
	RegisterResp {
		Id      int64  `json:"id"`
		Account string `json:"account"`
		Email   string `json:"email"`
	}
	// 用户信息
	UserInfoReq {
		Id int64 `json:"id"`
	}
	UserInfoResp {
		Id         int64  `json:"id"`
		Account    string `json:"account"`
		Email      string `json:"email"`
		Avatar     string `json:"avatar"'`
		Signature  string `json:"signature"`
		IsFollowed bool   `json:"isFollowed"`
		CreateTime string `json:"createTime" format:"date-time"`
		UpdateTime string `json:"updateTime" format:"date-time"`
	}
	// 关注
	followReq {
		Id   int64 `json:"id"`
		Type bool  `json:"type"`
	}
	followListReq {
		Id       int64 `json:"id"`
		PageNum  int64 `json:"pageNum"`
		PageSize int64 `json:"pageSize"`
	}
	followListView {
		UserInfo []UserInfoResp `json:"userInfo"`
		Total    int64          `json:"total"`
	}
)

service User {
	@handler Login
	post /api/user/login (LoginReq) returns (LoginResp)

	@handler Register
	post /api/user/register (RegisterReq) returns (RegisterResp)
}

@server (
	jwt: Auth
)
service User {
	@handler UserInfo
	post /api/user/userinfo (UserInfoReq) returns (UserInfoResp)

	@handler Follow
	post /api/user/follow (followReq)

	@handler FollowList
	post /api/user/follow/list (followListReq) returns (followListView)
}

